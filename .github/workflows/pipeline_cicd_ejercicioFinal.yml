name: CICD_EjercicioFinal
on:
  push:
    #branches: 
    #- feature-ms-carlosMendoza-ejercicioFinal
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    #CHECKOUT
      - name: Clonacion de codigo
        uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '8'
          distribution: 'temurin'
          
      - name: Compilacion
        run: |
          mvn package
          #mvn -B clean verify -Pcoverage

      - name: Ejecucion Test Unitarios
        run: |
          mvn package test
        
      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'temurin'
        
      - name: Reporte Jacoco
        run: |
          mvn jacoco:report
              
      - name: Analisis SonarCloud
        run: |
          mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:3.11.0.3922:sonar \
          -Dsonar.token=${{secrets.SONAR_TOKEN}} \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.organization=cmendo \
          -Dsonar.projectKey=cmendo_microservicio-java
      
     # - name: SonarQube Verificacion Quality Gate
     #   uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
     #   with:
     #        scanMetadataReportFile: target/sonar/report-task.txt
         
      - name: Docker Login
        uses: docker/login-action@v3.1.0
        with:
          username: ${{secrets.DOCKER_USER}}
          password: ${{secrets.DOCKER_PASS}}

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
      
      - name: Docker build
        run: | 
          docker build -t cmendoza83/ms-microservicio:latest .
          
      - name: Docker push
        run: | 
          docker push cmendoza83/ms-microservicio:latest

  #deploy:
  #  needs: build
  #  runs-on: self-hosted
  #  steps:
  #   - name: Clonacion de codigo
  #     uses: actions/checkout@v4

  #   - name: Despliegue
  #     run: |
  #          kubectl apply -f ms-deploy.yaml
