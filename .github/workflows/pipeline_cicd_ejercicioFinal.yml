name: CICD_EjercicioFinal
#EJECUCION AUTOMATICA CON ACCION PUSH
on:
  push:
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    #CHECKOUT
      - name: Clonacion de codigo
        uses: actions/checkout@v4
    #CONFIGURACION DE JAVA 8 PARA COMPILACION
      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '8'
          distribution: 'temurin'
    #BUILD      
      - name: BUILD
        run: |
          mvn package
          #mvn -B clean verify -Pcoverage
    
    #EJECUCION DE TEST UNITARIOS
      - name: Ejecucion Test Unitarios
        run: |
          mvn package test
    #ACTION JaCoCo para creacion de reportes
      - name: Reporte Jacoco
        run: |
          mvn jacoco:report
      #CONFIGURACION DE JAVA 8 PARA EJECUCION DE TEST ESTATICOS CON SONAR CLOUD  
      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          java-version: '17'
          distribution: 'temurin'
      #CONEXION A SONA CLOUD MEDIANTE EL USO DE SECRETOS          
      - name: Analisis SonarCloud
        run: |
          mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:3.11.0.3922:sonar \
          -Dsonar.token=${{secrets.SONAR_TOKEN}} \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.organization=cmendo \
          -Dsonar.projectKey=cmendo_microservicio-java

      - name: SonarQube Quality Gate Check
        uses: sonarsource/sonarqube-quality-gate-action@v1.1.0
        with:
          projectBaseDir: .  # Directorio raíz de tu proyecto
          projectName: cmendo/micoservicio-java  # Nombre de tu proyecto en SonarQube
          projectKey: cmendo_ms-aumento-voto  # Clave de tu proyecto en SonarQube
          organization: cmendo  # Nombre de la organización de SonarQube (si es necesario)
          url: https://sonarcloud.io  # URL de tu instancia de SonarQube (cambiar si no estás utilizando SonarCloud)
      
    #  - name: SonarQube Quality Gate check
    #    env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #    uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
    #    with:
    #      scanMetadataReportFile: target/sonar/report-task.txt
      #CONEXION A DOCKER MEDIANTE EL USO DE SECRETOS   
      - name: Docker Login
        uses: docker/login-action@v3.1.0
        with:
          username: ${{secrets.DOCKER_USER}}
          password: ${{secrets.DOCKER_PASS}}
          
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
      
      - name: Docker build
        run: | 
          docker build -t cmendoza83/ms-microservicio:latest .
          
      - name: Docker push
        run: | 
          docker push cmendoza83/ms-microservicio:latest

  deploy:
    needs: build
    runs-on: self-hosted
    
    steps:
     - name: Clonacion de codigo
       uses: actions/checkout@v4

     - name: Despliegue
       run: |
          kubectl apply -f ./deploy/deploy.yaml
            
